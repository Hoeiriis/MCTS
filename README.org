#+OPTIONS: ^:nil
* Introduction
This repository contains two implementations of the Monte Carlo Tree
Search UCT algorithm for single- and two-player environments.

A python implementation is rooted in MCTS_Prototyping

A C++ implementation is rooted in MCTS

Both implementations are intended to be generic enough that a user can
derive their own environment from the base classes provided and solve
that environment with the core engine.

* Dependencies
As this is being developed on Linux, only Linux instructions will be
provided as of now. However, this should be applicable to other
platforms as well.
** Python
The python code is straight forward; install numpy and anytree, and
you should be good to go.
** C++
Current requirements are as follows:
*** Cmake >=3.8
*** make
*** Boost >= 1.69
This should all be available in your distribution's package manager.
If you wish to use a local installation of boost in a non-standard
install location, you can set the environment variable
BOOST_ROOT="/path/to/your/boost/root", and the CMake script should
prioritize that install.
** Documentation
This project uses Doxygen to generate documentation. If you wish to
build the documentation pages, please install Doxygen and Graphviz.

** C++ tests
CMake clones googletests from the official git repo and installs it in ~GIT_ROOT/External_Libs/GTest~

* Compiling
  Compiling the C++ code is straight forward after installing the above dependencies;

~cd MCTS~

~cmake .~

~make~

The binaries will be in ~GIT_ROOT/MCTS/build/bin~

Optionally, if you wish to build the documentation:

 ~make doc~

Html and latex documentation will be generated in ~GIT_ROOT/doc~

CMake builds test unless explicitly told otherwise (~cmake . -DTESTING=NO~)
Run tests with

~make test~
